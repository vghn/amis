#!/usr/bin/env bash
# CLI

# Load environment
# shellcheck disable=1090
. "$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd -P)/envrc"

# Usage
usage(){
  echo '---------------------------------------------'
  echo "USAGE: ${BASH_SOURCE[0]} [COMMAND] [OPTIONS]"
  echo '---------------------------------------------'
  echo ''
  echo 'Commands:'
  echo ''
  echo '  - build [NAME]'
  echo ''
  echo '  - clean [NAME]'
  echo ''
  echo '  - validate [NAME]'
  echo ''
  echo '----------------------------------------------'
  echo 'For more information please consult the README'
  echo '----------------------------------------------'
  exit 1
}

# Process CLI
process_cli(){
  trap 'bye $?' EXIT HUP INT QUIT TERM
  if [[ -z $1 ]]; then usage; fi

  local cmd ami var
  cmd="${1:-}"
  ami="${2:-}"
  var="-var 'version=${VERSION}' -var 'ansible_repo=https://github.com/vghn/ansible'"

  case "$ami" in
    prometheus)
      export AWS_PROFILE='orion'
      export AWS_DEFAULT_REGION='us-east-1'
      export AMI_FILE='packer/prometheus.json'
      export AMI_NAME='Prometheus'
      export VARS="${var}"
      ;;
    unifi)
      export AWS_PROFILE='mec7'
      export AWS_DEFAULT_REGION='us-west-2'
      export AMI_FILE='packer/unifi.json'
      export AMI_NAME='Unifi'
      export VARS="${var}"
      ;;
    *)
      echo 'AMI name not recognized!'
      echo 'Allowed AMIs: prometheus, unifi'
      exit 1
      ;;
  esac

  case "$cmd" in
    build)
      eval packer build "$VARS" "$AMI_FILE"
      ;;
    validate)
      eval packer validate "$VARS" "$AMI_FILE"
      ;;
    clean)
      amicleaner --mapping-key name --mapping-values "${AMI_NAME}" --force-delete --full-report --keep-previous 1 --check-orphans
      ;;
    *)
      usage
      ;;
  esac
}

process_cli "${@:-}"

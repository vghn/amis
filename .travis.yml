dist: xenial
language: python
env:
  global:
    PACKER_VERSION: '1.4.4'
    VAULT_ADDR: 'https://vault.ghn.me:8200'
    VAULT_VERSION: '1.2.3'
  matrix:
    - AMI=prometheus AWS_PROFILE=lyra
    - AMI=vault AWS_PROFILE=hydra
install:
  - |
    pip install --upgrade pip ansible hvac pycrypto aws-amicleaner future
    ansible --version
    amicleaner --version
  - |
    curl -L -o packer.zip "https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip"
    unzip -d ~/bin packer.zip
    packer version
  - |
    wget -q https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip
    wget -qO - https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_SHA256SUMS | grep linux_amd64 | sha256sum -c
    unzip vault_${VAULT_VERSION}_linux_amd64.zip; mv vault ~/bin/
  - git clone https://github.com/vghn/ansible ../ansible
  - ( cd ../ansible; ansible-galaxy install --role-file requirements.yml )
before_script:
  - |
    if [[ "$TRAVIS_BRANCH" == master && "$TRAVIS_PULL_REQUEST" == false ]]; then
      export VAULT_TOKEN="$(vault write -field=token auth/approle/login role_id=${VAULT_ROLE_ID} secret_id=${VAULT_SECRET_ID})"
      mkdir -p ~/.aws
      vault kv get -field=credentials vgh/terraform/aws > ~/.aws/credentials
      chmod 400 ~/.aws/credentials
    fi
script:
  - packer validate "packer/${AMI}.json"
  - |
    if [[ "$TRAVIS_BRANCH" == master && "$TRAVIS_PULL_REQUEST" == false ]]; then
      packer build "packer/${AMI}.json"
      amicleaner --mapping-key name --mapping-values "${AMI^}" --force-delete --full-report --keep-previous 1 --check-orphans
    fi
notifications:
  webhooks:
    urls: https://vbot.ghn.me/travis
  slack:
    secure: I5d4t/2F8KHgP2Z0ajUz6CIS6TZdMUkFYUa5wH3uxyXiPlJpKZh0E5jsh7Tdz356RDOs5r/lGCzetqmlhH7EwmtiV1tks+btZ+hmR+xYFgmhMwnXivzWn1MwBtpt1q9pqCgheMODmcA8vG3yGeLooStLQ3++gjAGVWV2v9jahz5zoKrkYw+4haS+EzpsPddtMQx8/AiiMuB3MGOHZKvCmRjQW72MFqN2SYKT9U3MzBgdJS8Mxa7axITmyu1Pxvgt9kYJQilHbBUqNJUL1W9lBugFtVDMECHUC7DO5blFwbzUhglUDn9hhOy8VisHqrFuiNydFcgnqHoQJ+Fj3wKIukzPMpru1ZmcBC/wmNXwaAKIRlqzNYy9tfJOk/sjUkJ34BjNtf+8OAoRgRxfYycoZ0eXLidfZ/43PBuW5jP1pQK1Gk7yFLGyM2yOXTqflIGa2I71i87cxqE38laOspP3+SAtl0bIP3d8uDr/FBWb8hHTB9PyA0pmDTjy/vzcnH8KqMDs/OIAwoCs3rNnb/I0nhONBWU7sLMmJjqMr/AhA39AMxOXFd/9xZyVP2iHu0RueLFrOH6ZBrFUgUEGyn4uqPc2Z0wsO6wox4puM8YHH7YP/Z/GnfM/zMiX5rg4UOarUX3zWrUNPSSP0Z+gREgIvbBV/IYiqhqscq49eB1+mk0=
